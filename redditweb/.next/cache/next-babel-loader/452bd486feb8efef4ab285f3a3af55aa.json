{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _this = this,\n  _jsxFileName = \"/Users/cesarcordero/Documents/myprojects/nextjs/redditclone/redditweb/src/pages/register.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nvar Register = function Register(_ref) {\n  _objectDestructuringEmpty(_ref);\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(InputField, {\n      name: \"username\",\n      placeholder: \"username\",\n      label: \"Username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(InputField, {\n      name: \"password\",\n      placeholder: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    })), __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      variantColor: \"teal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"register\"));\n  }));\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Form","Box","Button","Wrapper","InputField","Register","_ref","_objectDestructuringEmpty","__jsx","variant","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","username","password","onSubmit","values","console","log","_ref2","isSubmitting","name","placeholder","label","mt","type","isLoading","variantColor","_c","$RefreshReg$"],"sources":["/Users/cesarcordero/Documents/myprojects/nextjs/redditclone/redditweb/src/pages/register.tsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Box,\n  Button,\n} from \"@chakra-ui/core\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\n\ninterface registerProps {}\n\nconst Register: React.FC<registerProps> = ({}) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={(values) => {\n          console.log(values);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username\"\n              label=\"Username\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Register;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAKEC,GAAG,EACHC,MAAM,QACD,iBAAiB;AACxB,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,UAAU,QAAQ,0BAA0B;AAIrD,IAAMC,QAAiC,GAAG,SAApCA,QAAiCA,CAAAC,IAAA,EAAW;EAAAC,yBAAA,CAAAD,IAAA;EAChD,OACEE,KAAA,CAACL,OAAO;IAACM,OAAO,EAAC,OAAO;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBR,KAAA,CAACT,MAAM;IACLkB,aAAa,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAE;IAC9CC,QAAQ,EAAE,SAAAA,SAACC,MAAM,EAAK;MACpBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAE;IAAAX,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED,UAAAQ,KAAA;IAAA,IAAGC,YAAY,GAAAD,KAAA,CAAZC,YAAY;IAAA,OACdjB,KAAA,CAACR,IAAI;MAAAU,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACHR,KAAA,CAACJ,UAAU;MACTsB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAC,UAAU;MAAAlB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACjB,CAAC,EACFR,KAAA,CAACP,GAAG;MAAC4B,EAAE,EAAE,CAAE;MAAAnB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACTR,KAAA,CAACJ,UAAU;MACTsB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAC,UAAU;MAChBE,IAAI,EAAC,UAAU;MAAApB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAChB,CACE,CAAC,EACNR,KAAA,CAACN,MAAM;MACL2B,EAAE,EAAE,CAAE;MACNC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEN,YAAa;MACxBO,YAAY,EAAC,MAAM;MAAAtB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACpB,UAEO,CACJ,CAAC;EAAA,CAEH,CACD,CAAC;AAEd,CAAC;AAACiB,EAAA,GArCI5B,QAAiC;AAuCvC,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}